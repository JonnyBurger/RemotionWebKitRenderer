{"version":3,"file":"774.bundle.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AAOA;AACA;AAEA;AACA;AACA;AAMA;AAEA;AAAA;AACA;AACA;AAEA;AAGA;AAAA;AAKA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAUA","sources":["./src/AudioTestingMute/index.tsx"],"sourcesContent":["import React from 'react';\nimport {\n\tAudio,\n\tSequence,\n\tuseCurrentFrame,\n\tuseVideoConfig,\n\tVideo,\n} from 'remotion';\nimport movie from '../resources/framer-music.mp4';\nimport music from '../resources/sound1.mp3';\n\nconst AudioTestingMute: React.FC = () => {\n\tconst frame = useCurrentFrame();\n\tconst {fps} = useVideoConfig();\n\n\t/**\n\t * Interleave music with the movie by muting each other\n\t * at certain points.\n\t */\n\tconst getMuteState = React.useCallback(\n\t\t(type: 'movie' | 'music') => {\n\t\t\tconst muteParts = [\n\t\t\t\t{start: Number(fps), end: 2 * fps},\n\t\t\t\t{start: 4 * fps, end: 5 * fps},\n\t\t\t];\n\t\t\tconst toMute = muteParts.some(\n\t\t\t\t(mp) => frame >= mp.start && frame <= mp.end\n\t\t\t);\n\t\t\treturn type === 'movie' ? toMute : !toMute;\n\t\t},\n\t\t[fps, frame]\n\t);\n\n\treturn (\n\t\t<div>\n\t\t\t<Video src={movie} muted={getMuteState('movie')} />\n\t\t\t<Sequence from={20} durationInFrames={200}>\n\t\t\t\t<Sequence from={20} durationInFrames={200}>\n\t\t\t\t\t<Sequence from={20} durationInFrames={200}>\n\t\t\t\t\t\t<Sequence from={20} durationInFrames={200}>\n\t\t\t\t\t\t\t<Sequence from={20} durationInFrames={200}>\n\t\t\t\t\t\t\t\t<Audio src={music} muted={getMuteState('music')} />\n\t\t\t\t\t\t\t\t<Audio src={music} muted={getMuteState('music')} />\n\t\t\t\t\t\t\t\t<Audio src={music} muted={getMuteState('music')} />\n\t\t\t\t\t\t\t</Sequence>\n\t\t\t\t\t\t</Sequence>\n\t\t\t\t\t</Sequence>\n\t\t\t\t</Sequence>\n\t\t\t</Sequence>\n\t\t</div>\n\t);\n};\n\nexport default AudioTestingMute;\n"],"names":[],"sourceRoot":""}